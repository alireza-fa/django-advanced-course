version: '3.9'

services:
  postgres_project:
    container_name: postgres_project_container
    image: postgres:15
    hostname: ${DB_HOST}
    command: -p ${DB_PORT}
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    expose:
      - ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./data/project/postgres:/var/lib/postgresql/data
    networks:
      - main_project_network

  redis_project:
    container_name: ${REDIS_HOST}
    hostname: ${REDIS_HOST}
    image: redis:latest
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --port ${REDIS_PORT}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
    volumes:
      - ./redis.conf:/usr/local/etc/redis.conf
    networks:
      - main_project_network

  app_project:
    build: .
    hostname: app_project
    container_name: project_app_container
    restart: always
    command: sh -c "python3 manage.py makemigrations &&
                    python3 manage.py migrate --no-input &&
                    python3 manage.py collectstatic --no-input &&
                    gunicorn -k gevent --workers 4 --chdir config config.wsgi:application -b 0.0.0.0:8000"
    depends_on:
      - postgres_project
      - redis_project
    expose:
      - 8000
    networks:
      - main_project_network
    volumes:
      - .:/code/
      - ./media:/code/media
      - ./static:/code/static

  nginx_project:
    image: nginx:latest
    hostname: nginx_project
    container_name: nginx_project_container
    command: nginx -g 'daemon off;'
    restart: always
    depends_on:
      - app_project
    expose:
      - "80"
    ports:
      - "80:80"
    networks:
      - main_project_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./media:/code/media
      - ./static:/code/static

networks:
  main_project_network:

volumes:
  static:
  media:
  data:
